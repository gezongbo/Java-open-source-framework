<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/util
	http://www.springframework.org/schema/util/spring-util-3.2.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	 ">
	
	<!-- 开启全包扫描 -->
	<context:component-scan base-package="com.lddx"></context:component-scan>

	<!-- 配置FirstAspect切面类、通知方法before -->
	<aop:config>
		<!-- 配置一个切入点表达式，可以被所有的通知共享使用 -->
		<aop:pointcut expression="execution(* com.lddx.service..*.*(..))" id="mypc"/>
		<!-- 配置切面类的    ref=""表示要配置的切面类的id  -->  
		<!-- 配置第一个切面类 -->
		<aop:aspect ref="firstAspect">  
			<!-- 配置前置通知 -->
			<aop:before method="before" pointcut="execution(* com.lddx.service..*.*(..))" />
			<!-- 配置环绕通知  -->
			<aop:around method="around" pointcut="execution(* com.lddx.service..*.*(..))"/> 
			<!-- 配置后置通知 -->
			<aop:after-returning method="afterReturning" pointcut-ref="mypc" returning="obj"/>
			<!-- 配置最终通知 -->
			<aop:after method="after" pointcut-ref="mypc"/>
		</aop:aspect>
		<!-- 配置第二个切面类 -->
		<aop:aspect ref="secondAspect">
			<!-- 前置通知 -->
			<aop:before method="before" pointcut-ref="mypc"/>
			<!-- 环绕通知 -->
			<aop:around method="around" pointcut-ref="mypc"/>
			<!-- 后置通知 -->
			<aop:after-returning method="afterReturning" pointcut-ref="mypc"/>
			<!-- 最终通知 -->
			<aop:after method="after" pointcut-ref="mypc"/>
		</aop:aspect>
	</aop:config>
	
</beans>